<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Windows域认证体系—Kerberos认证</title>
      <link href="/2019/08/25/Windows%E5%9F%9F%E8%AE%A4%E8%AF%81%E4%BD%93%E7%B3%BB%E2%80%94Kerberos%E8%AE%A4%E8%AF%81/"/>
      <url>/2019/08/25/Windows%E5%9F%9F%E8%AE%A4%E8%AF%81%E4%BD%93%E7%B3%BB%E2%80%94Kerberos%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<p>Kerberos认证流程、含义</p><a id="more"></a><h2 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h2><br><ul><li>Kerberos认证</li><li>域控制器（Domain Controller，DC）</li><li>密钥分发中心（Key Distribution Center，KDC）</li><li>帐户数据库（Account Database，AD）</li><li>身份验证服务（Authentication Service，AS）</li><li>入场卷[认证票据]（Ticket Granting Ticket，TGT）</li><li>票据发放服务（Ticket Granting Service，TGS）</li><li>票据（Ticket）</li><li>Master Key / Long-term Key |长期密钥（被 Hash加密的用户密钥）</li><li>Session Key / Short-term Key | 短期会话密钥</li><li>krbtgt 账户</li></ul><br><p>关键词/名称含义：</p><ul><li><code>Account Database</code>：类似于 SAM的数据库，存储所有 Client的白名单，只有处于白名单中的 Client才可以成功申请 TGT</li><li><code>Authentication Service</code>：为 Client生成 TGT的服务</li><li><code>Ticket Granting Ticket</code>：入场券，通过入场券能够获得票据，是一种临时凭证的存在</li><li><code>Ticket Granting Service</code>：为 Client生成某个服务的票据</li><li><code>Ticket</code>：票据，网络对象互相访问的凭证</li><li><code>Master Key</code>：长期密钥。将本机密码进行 Hash运算（NTML）得到一个 Hash Code, 我们一般管这样的 Hash Code叫做 Master Key</li><li><code>Session Key</code>：短期会话密钥。一种只在一段时间内有效的 Key</li><li><code>krbtgt账户</code>：每个域控制器都有一个 krbtgt的用户账户，是 KDC的服务账户，用来创建票据授予服务(TGS)加密的密钥</li></ul><br><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><br><h3 id="Kerberos认证含义"><a href="#Kerberos认证含义" class="headerlink" title="Kerberos认证含义"></a>Kerberos认证含义</h3><blockquote><p>Kerberos 是一种网络认证协议，其设计目标是通过密钥系统为 客户机 / 服务器应用程序 提供强大的认证服务。该认证过程的实现不依赖于主机操作系统的认证，无需基于主机地址的信任，不要求网络上所有主机的物理安全，并假定网络上传送的数据包可以被任意地读取、修改和插入数据。</p></blockquote><blockquote><p>在以上情况下， Kerberos 作为一种可信任的第三方认证服务，是通过传统的密码技术（如：共享密钥）执行认证服务的。——<a href="https://baike.baidu.com/item/Kerberos/5561682?fr=aladdin" target="_blank" rel="noopener">度娘百科</a></p></blockquote><br><h3 id="Kerberos认证的三只狗头（脑补地狱三头犬）"><a href="#Kerberos认证的三只狗头（脑补地狱三头犬）" class="headerlink" title="Kerberos认证的三只狗头（脑补地狱三头犬）"></a>Kerberos认证的三只狗头（脑补地狱三头犬）</h3><ul><li>Client</li><li>Server</li><li>DC（KDC）。在 Windows域环境中，KDC的角色由 DC（Domain Controller）来担当</li></ul><br><h2 id="Kerberos大致流程"><a href="#Kerberos大致流程" class="headerlink" title="Kerberos大致流程"></a>Kerberos大致流程</h2><br><ul><li>Client 携带账户信息向 KDC上的 AS服务发送想要访问 Server A的请求，索要入场卷（ TGT）；AS通过 AD验证 Client账户的访问权，成功后返回 TGT</li><li>Client 携带 TGT请求 KDC中的 TGS服务想要访问 Server A，索要票据（Ticket）；TGS验证 Client的 TGT，具有 Server A的访问权，返回 Ticket</li><li>Client 携带 Ticket与服务器进行相互验证且成功，可以访问 Server A，但无权访问其他服务器</li></ul><p><img src="./%E5%9F%9F%E8%AE%A4%E8%AF%81%E6%B5%81%E7%A8%8B.png" alt="域认证流程"></p><br><h2 id="Kerberos-认证三步走"><a href="#Kerberos-认证三步走" class="headerlink" title="Kerberos 认证三步走"></a>Kerberos 认证三步走</h2><br><h3 id="第一步-Client-与-AS"><a href="#第一步-Client-与-AS" class="headerlink" title="第一步 Client 与 AS"></a>第一步 Client 与 AS</h3><br><blockquote><p>第一步 AS 实现对 Client 身份的确认，并颁发给该 Client 一个 TGT</p></blockquote><p>首先，Client发送一个携带被自身 Master Key加密的身份信息 AS Request到 KDC，KDC验证用户名是否存在于 AD中（KDC 可以通 AD中对应用户名提取该 Client 的 Master Key）</p><ol><li><code>AS Request</code>大致内容：</li></ol><ul><li><code>Pre-authentication data</code>：被 Client 的 Master Key加密过的 Timestamp（Timestamp防爆破）。时间同步（Time Synchronization）显得尤为重要</li><li><code>Client name &amp; realm</code>：<em>Domain name\Client name</em> （Client info）</li><li><code>Server Name</code>：KDC中 TGS 的 Server Name</li></ul><br><p>AS 需要验证发送方 <code>Client info</code> 是否为本人（Client的密码对否），所以 AS 只需从 AD中提取 Client对应的 Master Key 对 <code>Pre-authentication data</code> 进行解密，如果是一个合法的 <strong>Timestamp</strong>（时间差距合理），则可以证明发送方提供的用户名是存在于白名单中且密码对应正确的</p><p>验证成功后，返回给 Client一个 <code>AS Response</code>，主要包含两个部分：请求 Client 的 Master Key加密过的 <code>TGS Session Key</code> 和被 KDC（krbtgt 帐户）加密的TGT （<strong>客户端无法解密 TGT</strong>，因为它没有 KDC Hash）</p><ol><li>TGT大致内容：</li></ol><ul><li><code>Session Key</code> : 第一部分的 <code>TGS Session Key</code> （这里的 Session Key 是被 KDC加密,不是 Client）</li><li><code>Client name &amp; realm</code> : <em>Domain name\Client</em> （Client info）</li><li><code>End time</code> : TGT到期的时间</li></ul><br><p>KDC此时生成一个 <code>Session Key</code>，使用 Client 用户名对应的 Master Key加密 Session Key，作为 AS数据（第一部分，用于后续与 TGS通讯）；使用 KDC中 krbtgt 帐户 的 Master Key 加密 Session Key 和 <code>Client info</code>，生成TGT（第二部分）</p><p>Client 通过自己的 Master Key 对第一部分解密获得 <code>TGS Session Key</code>后，携带 TGT进入第二步</p><p><img src="./%E5%9F%9F%E8%AE%A4%E8%AF%81%E7%AC%AC%E4%B8%80%E6%AD%A5.png" alt="域认证第一步" title="域认证第一步"></p><br><h3 id="第二步-Client-与-TGS"><a href="#第二步-Client-与-TGS" class="headerlink" title="第二步 Client 与 TGS"></a>第二步 Client 与 TGS</h3><br><blockquote><p>第二步 实现 TGS 对 Client 身份（TGT）的确认，并分发给该 Client 一个 Ticket</p></blockquote><p>Client 使用 AS返回的 <code>TGS Session Key</code> 建立访问 KDC中 TGS服务的请求（<code>TGS Request</code>），再将 TGT 连同请求一起发送到 TGS 服务</p><ol><li><code>TGS Request</code>大致内容：</li></ol><ul><li><code>Authenticator</code>：（Client info + timestamp）通过 <code>TGS Session Key</code>加密</li><li><code>TGT</code> ：（<em>TGS Session Key + Client info + End Time</em>）</li><li><code>Client info</code> ：<em>Domain name/ Client</em></li><li><code>Server info</code> ：Client试图访问的 Server</li><li><code>时间戳</code></li></ul><br><p>TGS收到 <code>TGS Request</code>后需要验证 TGT 和 Authenticator；因为 <code>Authenticator</code> 被 <code>TGS Session Key</code> 加密，TGS服务并没有保存这个 Session Key ；于是使用 TGS 自己的 Master Key 解密 TGT 获得其中的 TGS Session Key，进而解密 Authenticator，验证客户端是否受信</p><p>验证成功后，TGS 返回一个 <code>TGS Response</code> ，包含两个消息：加密的 Ticket 和加密的 Session Key</p><ol><li><code>TGS Response</code> 大致内容：</li></ol><ul><li>使用 Server 的 Master Key 进行加密的 Ticket</li><li>通过 <code>TGS Session Key</code> 加密的 <code>Server Session Key</code> （将来 Client与 Server Service的通信使用）</li></ul><ol start="2"><li><code>Ticket</code> 大致内容：</li></ol><ul><li>Server Session Key</li><li>Client info</li><li>End time: Ticket的到期时间</li></ul><br><p>Client收到 <code>TGS Response</code> 后，使用 <code>TGS Session Key</code> 解密 <code>Server Session Key</code>，得到 Session Key 后，进入第三步</p><p><img src="./%E5%9F%9F%E8%AE%A4%E8%AF%81%E7%AC%AC%E4%BA%8C%E6%AD%A5.png" alt="域认证第二步" title="域认证第二步"></p><br><h3 id="第三步-Client-和-Server"><a href="#第三步-Client-和-Server" class="headerlink" title="第三步 Client 和 Server"></a>第三步 Client 和 Server</h3><br><blockquote><p>第三步，Client 携带 <code>Server Session Key</code> 和 <code>Ticket</code>访问服务器，验证成功后，可以访问 Server资源</p></blockquote><p>Client 通过第二步获的 Server 的 Session Key ，创建用于证明自己就是 Ticket 的真正所有者的 Authenticator 和时间戳，并使用 Server的 Session Key 进行加密</p><p>向服务器请求后，服务器用自己的 Master Key 解密  Ticket ，得到 <em>Server Session Key</em>，使用 <em>Server Session Key</em> 解密 Authenticator 进行验证，同上一步一样<br>验证成功后返回给 Client <strong>新时间戳</strong>，<strong>使用 Server Session Key 加密</strong></p><p>Client 通过缓存中的 <code>Server Session Key</code> 解密服务器返回信息，得到新时间戳并验证其是否正确。验证通过的话则客户端可以信赖服务器，并向服务器发送服务请求，服务器向客户端提供相应的服务</p><p>校验通过后，认证成功，该票据会一直存在客户端内存中</p><p><img src="./%E5%9F%9F%E8%AE%A4%E8%AF%81%E7%AC%AC%E4%B8%89%E6%AD%A5.png" alt="域认证第三步" title="域认证第三步"></p><br><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul><li><a href="https://blog.csdn.net/wy_97/article/details/87649262" target="_blank" rel="noopener">windows 域认证 Kerberos详解</a></li><li><a href="https://www.secpulse.com/archives/94848.html" target="_blank" rel="noopener">彻底理解Windows认证 - 议题解读</a></li><li><a href="https://blog.csdn.net/wulantian/article/details/42418231" target="_blank" rel="noopener">kerberos认证原理—讲的非常细致，易懂</a></li><li><a href="https://zh.wikipedia.org/wiki/Kerberos" target="_blank" rel="noopener">Kerberos</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 渗透测试 </tag>
            
            <tag> Security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows认证体系—NTLM认证</title>
      <link href="/2019/08/23/Windows%E8%AE%A4%E8%AF%81%E4%BD%93%E7%B3%BB%E2%80%94NTLM%E8%AE%A4%E8%AF%81/"/>
      <url>/2019/08/23/Windows%E8%AE%A4%E8%AF%81%E4%BD%93%E7%B3%BB%E2%80%94NTLM%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<p>NTLM Hash与 NTLM的关系、NTLM网络认证流程</p><a id="more"></a><h2 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h2><ul><li><code>NTLM Hash</code> </li><li><code>NTLM</code> </li><li><code>LSASS</code> </li><li><code>Net-NTLM hash</code> </li></ul><br><p>关键词解释：</p><ul><li><code>NTLM Hash</code>：存储在<code>SAM数据库</code>及<code>NTDS数据库</code>中对密码进行 Hash摘要计算后的结果</li><li><code>Net-NTLM hash</code>：通常是指网络环境下 NTLM认证中的 Hash (下有说明)</li><li><code>NTLM</code>：除 <code>Kerberos</code>之外的一种网络认证协议，只支持 Windows </li><li><code>LSASS</code>：Windows系统的安全机制（系统进程）。用于本地安全和登陆策略 </li></ul><br><h2 id="本地认证"><a href="#本地认证" class="headerlink" title="本地认证"></a>本地认证</h2><br><p>Windows不存储用户的明文密码，它会将用户的明文密码经过加密后存储在 SAM (<em>Security Account Manager Database</em>，安全账号管理数据库)中。</p><blockquote><p>SAM文件的路径是 <code>%SystemRoot%\system32\config\sam</code> </p></blockquote><p>在进行本地认证的过程中，当用户登录时，系统将用户输入的明文密码加密成 <em><code>NTLM Hash</code></em>，与  SAM数据库中的 <em><code>NTLM Hash</code></em> 进行比较，从而实现认证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winlogon.exe -&gt; 接收用户输入 -&gt; lsass.exe -&gt; (认证)</span><br></pre></td></tr></table></figure><p>首先，用户注销、重启、锁屏后，操作系统会让 <code>winlogon</code>显示登录界面，也就是输入框，接收输入后，将密码交给 <code>lsass</code>进程，这个进程中会存一份明文密码，将明文密码加密成 <code>NTLM Hash</code>，对比 SAM数据库中的 Hash进行验证</p><br><h3 id="NTLM-Hash"><a href="#NTLM-Hash" class="headerlink" title="NTLM Hash"></a>NTLM Hash</h3><br><blockquote><p>Hash，<strong><em>一种将任意长度的消息压缩到某一固定长度的消息摘要的函数</em></strong> 。—— <a href="https://baike.baidu.com/item/Hash/390310?fr=aladdin" target="_blank" rel="noopener">度娘百科</a>  </p></blockquote><p>通常意义上的 <code>NTLM Hash</code>指存储在 <code>SAM数据库</code>及<code>NTDS数据库</code>中对密码进行 Hash摘要计算后的结果，这类 Hash可以直接用于 PTH，并且通常存在于 <code>LSASS</code>进程中，便于 SSP（NTLM 安全支持提供程序）使用</p><br><h3 id="NTLM-Hash的生成"><a href="#NTLM-Hash的生成" class="headerlink" title="NTLM Hash的生成"></a>NTLM Hash的生成</h3><br><ul><li>用户密码：<code>susi2001</code></li><li>首先，密码经过十六进制转为 <code>7375736932303031</code> </li><li>将十六进制结果转为 Unicode格式 <code>73007500730069003200300030003100</code></li><li>以 Hex（16进制）数据作 MD4加密 <code>ed3202726368f8e9fd23e78fbfac8c13</code> </li></ul><br><blockquote><p>MD4加密使用 <code>HashCalc</code> </p></blockquote><br><h2 id="NTLM-和-NTLM-Hash"><a href="#NTLM-和-NTLM-Hash" class="headerlink" title="NTLM 和 NTLM Hash"></a>NTLM 和 NTLM Hash</h2><br><p>NTLM 是一种网络认证协议，与 <code>NTLM Hash</code>的关系就是：<strong>NTLM网络认证协议是以 <code>NTLM Hash</code> 作为根本凭证进行认证的协议</strong></p><br><h2 id="NTLM网络认证机制"><a href="#NTLM网络认证机制" class="headerlink" title="NTLM网络认证机制"></a>NTLM网络认证机制</h2><br><p>NTLM是一种基于质询/应答 （<em>Challenge/Response</em> ）消息交换模式的认证机制，常用于 <strong>工作组</strong>和<strong>域环境</strong>下<em>登录场景的身份认证</em></p><br><h3 id="NTLM-认证方式"><a href="#NTLM-认证方式" class="headerlink" title="NTLM 认证方式"></a>NTLM 认证方式</h3><br><ul><li><strong>交互式认证</strong> ：使用域账号登录到客户端；涉及两部分（客户端、域控）</li><li><strong>非交互式认证</strong> ：在已经登陆 的客户端上使用 SSO 的方式访问一台服务器；涉及三部分（客户端、域控、服务器）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 非交互式场景</span></span><br><span class="line"></span><br><span class="line">net use Z: \\10.0.1.102\vefs <span class="string">"password"</span> /user:domain\xiaoming </span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">net use Z: \\10.0.1.102\vefs <span class="string">"password"</span> /user:xiaoming</span><br></pre></td></tr></table></figure><br><h3 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h3><br><p>NTLM协议的认证过程有三步：</p><ul><li><strong>协商</strong>：主要用于确认双方协议版本（NTLMv1、NTLMv2等）</li><li><strong>质询</strong>：质询/应答 （<em>Challenge/Response</em>）模式，用于消息交换</li><li><strong>验证</strong>：验证身份合法性，通常由 Server端或 DC完成这个过程</li></ul><p>大致流程如下：</p><ul><li>使用用户名和密码尝试登录客户端</li><li>客户端对密码进行哈希处理并缓存密码 hash，丢弃实际的明文密码(不存储)，然后将用户名发送到服务器，发起认证请求</li><li>服务器生成一个 16字节的随机数，称为 <strong>质询</strong> (Challenge) 或随机数 (nonce.aspx)，并发送给客户端</li><li>客户端使用缓存的 <strong><em>用户密码的 Hash</em></strong> 对此 <code>Challenge</code> 进行加密，加密结果为 <code>Response</code>（暂且叫做<code>Challenge1</code>），然后将结果发送给服务器</li><li>服务器发送三项数据给域控制器：<ul><li><code>User name</code></li><li>发送给客户端的 <code>Challenge</code>（已加密） </li><li>从客户端接收到的 <code>Response</code> </li></ul></li><li>域控制器使用 <code>User name</code>从 AD中检索该用户密码的 <code>NTLM Hash</code>，并使用此 <code>NTLM Hash</code>来加密 <em><code>Challenge</code></em> ，然后把这个值和客户端计算的响应值（<code>Challenge1</code>）进行比较。如果它们相同，则验证成功</li></ul><blockquote><p>经过 <code>NTLM Hash</code>加密 <code>Challenge</code>的结果在网络协议中称之为 <code>Net NTLM Hash</code> </p></blockquote><blockquote><p>在以上流程中，用户的登录密码 Hash 即为 <code>NTLM Hash</code>，Response中则包含 <code>Net-NTLM Hash</code></p></blockquote><br><h3 id="NTLM-v2"><a href="#NTLM-v2" class="headerlink" title="NTLM v2"></a>NTLM v2</h3><br><blockquote><p>NTLM version 2 (NTLMv2)是在 Windows NT 4.0 SP4中引入的（在 Windows 2000 中得到了本地支持），它通过加强协议来防止许多欺骗攻击，并增加服务器向客户机进行身份验证的能力，从而增强了 NTLM的安全性</p></blockquote><p><code>NTLM v1</code> 与 <code>NTLM v2</code> 最显著的区别就是 <code>Challenge</code> 与 <strong>加密算法</strong> 不同，共同点就是加密的原料都是 <code>NTLM Hash</code> ：</p><ul><li>Challenge：<ul><li><code>v1</code>： 8-byte</li><li><code>v2</code>：16-byte </li></ul></li><li>Net NTLM Hash：<ul><li><code>v1</code>：DES</li><li><code>v2</code>： HMAC-MD5</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># NTLM</span></span><br><span class="line"></span><br><span class="line">C = <span class="number">8</span>-byte server challenge, random</span><br><span class="line">K1 | K2 | K3 = NTLM-Hash | <span class="number">5</span>-bytes<span class="number">-0</span></span><br><span class="line">response = DES(K1,C) | DES(K2,C) | DES(K3,C)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># NTLM v2</span></span><br><span class="line"></span><br><span class="line">SC = <span class="number">8</span>-byte server challenge, random</span><br><span class="line">CC = <span class="number">8</span>-byte client challenge, random</span><br><span class="line">CC* = (X, time, CC2, domain name)</span><br><span class="line">v2-Hash = HMAC-MD5(NT-Hash, user name, domain name)</span><br><span class="line">LMv2 = HMAC-MD5(v2-Hash, SC, CC)</span><br><span class="line">NTv2 = HMAC-MD5(v2-Hash, SC, CC*)</span><br><span class="line">response = LMv2 | CC | NTv2 | CC*</span><br></pre></td></tr></table></figure><br><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul><li><a href="http://wikipedia.moesalih.com/NTLM" target="_blank" rel="noopener">NT LAN Manager</a></li><li><a href="http://www.voidcn.com/article/p-voxshmho-sn.html" target="_blank" rel="noopener">NTLM 协议</a></li><li><a href="https://3gstudent.github.io/3gstudent.github.io/Windows%E4%B8%8B%E7%9A%84%E5%AF%86%E7%A0%81hash-NTLM-hash%E5%92%8CNet-NTLM-hash%E4%BB%8B%E7%BB%8D/" target="_blank" rel="noopener">Windows下的密码hash——NTLM hash和Net-NTLM hash介绍</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 渗透测试 </tag>
            
            <tag> Security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集</title>
      <link href="/2019/07/15/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/2019/07/15/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p>信息收集，收集的是那些信息？怎样收集？</p><a id="more"></a><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=570378662&auto=1&height=66"></iframe><br>信息收集，收集的是那些信息？主要的就是服务器配置信息和网站的一些敏感信息，包含不限于网站域名(及子域名)、操作系统、CMS指纹、真实IP、开放的端口、Whois信息、备案信息、证书、敏感目录、防火墙、登录页面等等，这些信息会对后期渗透带来极大的作用<br><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><br><ul><li><p>主动收集<br>  通过扫描确认目标安装的操作系统和网络服务，并发现潜在漏洞的过程</p></li><li><p>被动收集（外围信息收集）<br>  在不接触目标的情况下搜集目标、网络、客户及其他信息</p></li></ul><br><blockquote><p>A记录、MX记录、CNAME记录……<a href="https://baike.baidu.com/item/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/574285?fr=aladdin#6_3" target="_blank" rel="noopener">度娘百科</a> 和 <a href="https://hellohxk.com/blog/penetration-testing/#host-dig" target="_blank" rel="noopener">渗透测试相关总结</a> </p></blockquote><br><h2 id="域名相关信息收集"><a href="#域名相关信息收集" class="headerlink" title="域名相关信息收集"></a>域名相关信息收集</h2><br>这是在得到域名后的第一件事了吧...通常包括该域名的 DNS服务器信息和注册人的联系信息等<br><h3 id="Whois信息"><a href="#Whois信息" class="headerlink" title="Whois信息"></a>Whois信息</h3><br><blockquote><p>简单说，whois就是一个用来查询域名是否已经被注册，以及注册域名的详细信息的数据库（如域名所有人、域名注册商）。通过whois来实现对域名信息的查询。whois通常使用TCP协议43端口。每个域名/IP的whois信息由对应的管理机构保存。    ——度娘百科</p></blockquote><br><p>在线 WHois查询网站：</p><ul><li><a href="http://whois.chinaz.com/" target="_blank" rel="noopener">站长之家</a>  </li><li><a href="https://whois.aliyun.com/" target="_blank" rel="noopener">阿里云</a>  </li><li><a href="https://whois.aizhan.com/" target="_blank" rel="noopener">爱站网</a> </li></ul><p>国外的网站可能用国内的 WHois查不到，所以使用国外的 WHois：</p><ul><li><a href="https://whois.icann.org" target="_blank" rel="noopener">Whois</a></li><li><a href="https://www.whois.com/whois" target="_blank" rel="noopener">WHois2</a></li></ul><p>本地 Tools：</p><ul><li><code>whois</code> (kali工具) </li></ul><br><p><img src="./1562721082715.png" alt="Alt text"> </p><br><h3 id="备案信息查询"><a href="#备案信息查询" class="headerlink" title="备案信息查询"></a>备案信息查询</h3><br>主要针对国内网站<ul><li><a href="https://www.tianyancha.com/" target="_blank" rel="noopener">天眼查</a> </li><li><a href="http://www.beianbeian.com/" target="_blank" rel="noopener">ICP备案查询网</a> </li></ul><br><h2 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h2><br><blockquote><p>子域名，是顶级域名（一级域名或父域名）的下一级。例如：<code>mail.baidu.com</code> 是 <code>baidu.com</code> 的子域名</p></blockquote><p>子域名探测可以帮我们发现渗透测试中更多的服务，这将增加发现漏洞的可能性（旁注）<br><br></p><h3 id="Google-Hacking"><a href="#Google-Hacking" class="headerlink" title="Google Hacking"></a>Google Hacking</h3><br><ul><li><code>site:baidu.com</code> </li><li><code>site:baidu.com -www</code> </li></ul><br><h3 id="证书透明度"><a href="#证书透明度" class="headerlink" title="证书透明度"></a>证书透明度</h3><br><blockquote><p>谷歌 Chrome要求2017年所有 SSL证书都要支持证书透明，所以可以根据 CT log查询支持 HTTPS网站的子域名<br>证书透明度（CT）是证书授权机构（CA）的一个项目，证书授权机构会将每个 SSL/TLS证书发布到公共日志中。<br> 一个SSL/TLS证书通常包含域名、子域名和邮件地址</p></blockquote><ul><li>Certificate Transparency logs（<a href="https://transparencyreport.google.com/https/certificates" target="_blank" rel="noopener">CT</a> ） <ul><li><a href="https://crt.sh/" target="_blank" rel="noopener">Crt</a>  </li><li><a href="https://censys.io/" target="_blank" rel="noopener">Censys</a> </li><li><a href="https://transparencyreport.google.com/https/certificates" target="_blank" rel="noopener">Google CT</a> </li></ul></li></ul><p><img src="./1562726243235.png" alt="Alt text"> </p><br><h3 id="crossdomain-xml-文件"><a href="#crossdomain-xml-文件" class="headerlink" title="crossdomain.xml 文件"></a>crossdomain.xml 文件</h3><br><p><img src="./1563102710570.png" alt="Alt text"></p><br><h3 id="其他网站-amp-工具-【TODO】"><a href="#其他网站-amp-工具-【TODO】" class="headerlink" title="其他网站&amp;工具 【TODO】"></a>其他网站&amp;工具 【TODO】</h3><br><p>漏洞：</p><ul><li>DNS 域传送漏洞</li></ul><p>在线网站：</p><ul><li><a href="https://dnsdumpster.com/" target="_blank" rel="noopener">DNSdumpster</a>  是一个免费的域名分析网站，是HackerTarget旗下项目，可以查询相关的子域名或者旁站域名</li><li><a href="https://dnsdb.io/zh-cn" target="_blank" rel="noopener">dnsdb</a> 全球 DNS搜索引擎</li></ul><p>工具：</p><ul><li><a href="https://github.com/aboul3la/Sublist3r" target="_blank" rel="noopener">Sublist3r</a> 是一个python工具，旨在使用OSINT枚举网站的子域。</li><li><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">subDomainsBrute</a> 本工具用于渗透测试目标域名收集。高并发DNS暴力枚举，发现其他工具无法探测到的域名, 如Google，aizhan，fofa</li><li><a href="https://github.com/ring04h/wydomain" target="_blank" rel="noopener">wydomain</a> 猪猪侠开发的工具</li><li><a href="https://github.com/guelfoweb/knock" target="_blank" rel="noopener">Knock Subdomain Scan</a> 子域名扫描器，freebuf<a href="https://www.freebuf.com/column/145949.html" target="_blank" rel="noopener">介绍</a></li><li><a href="https://github.com/subfinder/subfinder" target="_blank" rel="noopener">subfinder</a> 它已成为 <code>sublist3r</code>项目的继承者。freebuf<a href="https://www.freebuf.com/sectool/175556.html" target="_blank" rel="noopener">介绍</a> </li><li><a href="https://github.com/evilH2O2/Daily/blob/master/Tools/Layer.rar" target="_blank" rel="noopener">Layer子域名挖掘机</a> </li><li><a href="https://github.com/TheRook/subbrute" target="_blank" rel="noopener">SubBrute</a> 枚举域名系统记录和子域的域名系统元查询蜘蛛</li><li><a href="https://github.com/michenriksen/aquatone" target="_blank" rel="noopener">aquatone</a>  一款强大的域名工具，可以查子域名相同指纹站点</li></ul><p><img src="./1563100622677.png" alt="Alt text"><br><img src="./2019-07-14-19-40.png" alt="Alt text"></p><br><h2 id="寻找真实-IP"><a href="#寻找真实-IP" class="headerlink" title="寻找真实 IP"></a>寻找真实 IP</h2><br><blockquote><p>CDN（content delivery network 或 content distribution network）即内容分发网络。如果目标使用了 CDN，那么直接 Ping目标的域名，得到的 IP是离我们最近的一台目标节点的 CDN服务器</p></blockquote><br><h3 id="判断-CND是否存在"><a href="#判断-CND是否存在" class="headerlink" title="判断 CND是否存在"></a>判断 CND是否存在</h3><br><h4 id="通过多地-Ping域名"><a href="#通过多地-Ping域名" class="headerlink" title="通过多地 Ping域名"></a>通过多地 Ping域名</h4><br><p>通过多地 <code>Ping</code>域名，查看对应 IP 地址是否唯一，若不唯一，多半是使用了 CDN<br>如果 IP大多不一样或者规律性很强，可以尝试查询这些 IP的归属地，判断是否存在 CDN</p><p><img src="./1562746685378.png" alt="Alt text" title="未使用 CDN"><br><img src="./1562746836448.png" alt="Alt text" title="使用 CDN"></p><br><p>多地点 <code>Ping</code>在线网站：</p><ul><li><a href="http://ping.chinaz.com" target="_blank" rel="noopener">站长之家</a> </li><li><a href="https://ping.aizhan.com/" target="_blank" rel="noopener">爱站网</a></li><li><a href="https://tools.ipip.net/newping.php" target="_blank" rel="noopener">IPIP</a> </li></ul><br><h4 id="使用-nslookup"><a href="#使用-nslookup" class="headerlink" title="使用 nslookup"></a>使用 nslookup</h4><br>nslookup会得到 DNS解析服务器保存在缓存中的非权威解答<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 采用 CDN</span></span><br><span class="line">&gt; www.baidu.om</span><br><span class="line"></span><br><span class="line">非权威应答:</span><br><span class="line">www.baidu.comcanonical name = www.a.shifen.com.</span><br><span class="line">Name:www.a.shifen.com</span><br><span class="line">Address: 180.101.49.11</span><br><span class="line">Name:www.a.shifen.com</span><br><span class="line">Address: 180.101.49.12</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------------------------------</span></span><br><span class="line"><span class="comment"># 无 CDN</span></span><br><span class="line">&gt; www.puercn.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">非权威应答:</span><br><span class="line">Name:www.puercn.com</span><br><span class="line">Address: 116.55.242.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------------------------------</span></span><br><span class="line">&gt; maxiang.io</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:maxiang.io</span><br><span class="line">Address: 115.29.201.173</span><br></pre></td></tr></table></figure><br><h4 id="修改本地-hosts文件"><a href="#修改本地-hosts文件" class="headerlink" title="修改本地 hosts文件"></a>修改本地 hosts文件</h4><br>修改本地 hosts文件，强行将域名与 IP解析对应然后访问域名查看页面是否变化<br><h4 id="IP反查域名（这个……）"><a href="#IP反查域名（这个……）" class="headerlink" title="IP反查域名（这个……）"></a>IP反查域名（这个……）</h4><br><p>使用 IP反查域名的方式查找 IP下是否存在对应域名，如果使用了 CDN，会出现大量无关域名：<br><img src="./1562748778598.png" alt="Alt text"><br><img src="./1562748843679.png" alt="Alt text" title="WeChat-Web"><br><img src="./1562748898697.png" alt="Alt text" title="Baidu--大概就是从这里判断……"></p><br><p>地址：</p><ul><li><a href="https://tools.ipip.net/ipdomain.php" target="_blank" rel="noopener">IPIP</a> </li><li><a href="https://dns.aizhan.com" target="_blank" rel="noopener">爱站网</a></li></ul><br><h3 id="绕过-CDN-查找网站真实-IP-TODO"><a href="#绕过-CDN-查找网站真实-IP-TODO" class="headerlink" title="绕过 CDN 查找网站真实 IP [TODO]"></a>绕过 CDN 查找网站真实 IP [<code>TODO</code>]</h3><br><h4 id="秃域名"><a href="#秃域名" class="headerlink" title="秃域名"></a>秃域名</h4><br>因为现有很多 CDN厂商基本只要求把 www.xxx.com cname到 CDN主服务器上去，而且有人为了维护网站时更方便，不用等 CDN缓存，只让 WWW域名使用 CDN，秃域名不使用<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ping www.xxx.com</span><br><span class="line"></span><br><span class="line">ping xxx.com</span><br></pre></td></tr></table></figure><br><h4 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h4><br><p>抓包观察 IP地址，使用 <code>telnet</code>去连接相应端口，如果返回 html则为真实 IP</p><br><h4 id="内部邮箱源（RSS订阅、邮件等）"><a href="#内部邮箱源（RSS订阅、邮件等）" class="headerlink" title="内部邮箱源（RSS订阅、邮件等）*"></a>内部邮箱源（RSS订阅、邮件等）*</h4><br><p>有的服务器本地自带 sendmail，注册之后，会主动发一封邮件给我们，打开邮件的源代码，你就能看到邮件服务器的真实IP了，很大可能与主站处在一个网段</p><p>注意，如果是第三方或公共邮件服务器是没用的</p><br><h4 id="查询子域名"><a href="#查询子域名" class="headerlink" title="查询子域名*"></a>查询子域名*</h4><br><p>很多站长可能只会对主站或者流量大的子站点做了 CDN，很多子站点又跟主站 <em>在同一台服务器或者同一个C段内</em>，从而能判断出目标的真实 IP段</p><br><h4 id="国外主机解析域名-amp-国外-DNS"><a href="#国外主机解析域名-amp-国外-DNS" class="headerlink" title="国外主机解析域名&amp;国外 DNS*"></a>国外主机解析域名&amp;国外 DNS*</h4><br>国内很多 CDN 厂商因为各种原因只做了国内的线路，而针对国外的线路可能几乎没有，此时我们使用国外的主机直接访问可能就能获取到真实 IP<p>国外 DNS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目标并未使用 CDN，这里只是举一个使用方法的例子</span></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># nslookup maxiang.io 8.8.8.8   </span></span><br><span class="line">Server:8.8.8.8</span><br><span class="line">Address:8.8.8.8<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:maxiang.io</span><br><span class="line">Address: 115.29.201.173</span><br></pre></td></tr></table></figure><br><p>国外 Ping服务：</p><ul><li><a href="https://asm.ca.com/zh_cn/ping.php" target="_blank" rel="noopener">App Synthetic Monitor</a> </li></ul><br><h4 id="利用-SSL证书寻找真实原始IP"><a href="#利用-SSL证书寻找真实原始IP" class="headerlink" title="利用 SSL证书寻找真实原始IP*"></a>利用 SSL证书寻找真实原始IP*</h4><br><p><a href="https://www.secjuice.com/finding-real-ips-of-origin-servers-behind-cloudflare-or-tor/" target="_blank" rel="noopener">Finding The Real Origin IPs Hiding Behind CloudFlare or Tor</a>  [19 August 2018]</p><br><h4 id="目标-APP抓包"><a href="#目标-APP抓包" class="headerlink" title="目标 APP抓包*"></a>目标 APP抓包*</h4><br>如果目标站有自己的 APP，可以通过 Fiddler或 Burp Suite抓包，寻找真实 IP<br><h4 id="利用网站漏洞-近距离与网站进行-Py交易"><a href="#利用网站漏洞-近距离与网站进行-Py交易" class="headerlink" title="利用网站漏洞(近距离与网站进行 Py交易)*"></a>利用网站漏洞(近距离与网站进行 Py交易)*</h4><br>例如xss、ssrf、命令执行反弹shell等<br><h4 id="历史解析记录"><a href="#历史解析记录" class="headerlink" title="历史解析记录"></a>历史解析记录</h4><br>查看一些历史的 A记录说不定会发现什么但是更多的可能是那个 IP已经不在用了…<p>在线网站：</p><ul><li><a href="https://securitytrails.com/" target="_blank" rel="noopener">SecurityTrails</a> </li><li><a href="https://www.17ce.com/" target="_blank" rel="noopener">17CE</a></li><li><a href="https://toolbar.netcraft.com/site_report?url=" target="_blank" rel="noopener">Site report</a> </li><li><a href="https://community.riskiq.com/" target="_blank" rel="noopener">RiskIQ</a>  [需要注册]</li></ul><p><img src="./1562854972168.png" alt="Alt text"></p><p><img src="./1562855014817.png" alt="Alt text"></p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目标并未使用 CDN，这里只是举一个使用方法的例子</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># curl -H "Host: www.puercn.com" 116.55.242.3 -k</span></span><br><span class="line"><span class="comment"># 返回首页</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># curl -H "Host: www.puercn.com" 116.55.243.79 -k</span></span><br><span class="line">curl: (7) Failed to connect to 116.55.243.79 port 80: 连接超时</span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># curl -H "Host: www.puercn.com" 116.55.242.4 -k</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;301 Moved Permanently&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body bgcolor=<span class="string">"white"</span>&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;301 Moved Permanently&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br><h4 id="全网扫描"><a href="#全网扫描" class="headerlink" title="全网扫描*"></a>全网扫描*</h4><br>通过扫描所有 IP，根据对比目标网站的 banner，找出其 IP 地址可以用现成的搜索引擎： shodan、fofa、 zoomeye或扫描工具 zmap、Masscan等等<ul><li><a href="https://phpinfo.me/2015/01/15/809.html" target="_blank" rel="noopener">(转)简单获取CDN背后网站的真实IP</a> 使用 zmap扫描</li></ul><br><h4 id="利用-DDoS"><a href="#利用-DDoS" class="headerlink" title="利用 DDoS*"></a>利用 DDoS*</h4><br>利用 DDoS耗光 DNS的流量，TG、暗网有专门的 DDoS<br><h3 id="验证获取的-IP"><a href="#验证获取的-IP" class="headerlink" title="验证获取的 IP"></a>验证获取的 IP</h3><br>找到目标的真实 IP后，如何验证其真实性？如果是 Web，可以直接访问 IP，看看响应页面是否和访问域名返回的一样，其实上面判断 CDN的有些方法也可以；如果目标段比较大，可以借助类似 Masscan的工具批量扫描对应 IP段中所有开了 80、443、8080端口的 IP，然后逐个尝试访问，观察响应结果是否为目标站点<br><h2 id="C段-TODO"><a href="#C段-TODO" class="headerlink" title="C段 [TODO]"></a>C段 [TODO]</h2><br>当已获取某些子域名真实IP时，可以进行横向搜索，会有一些意想不到的收获<ul><li><code>Site:10.12.3.*</code></li><li><code>nmap -sS ip/24</code></li><li><a href="http://www.webscan.cc/" target="_blank" rel="noopener">在线工具</a></li><li><a href="https://phpinfo.me/bing.php" target="_blank" rel="noopener">在线 C段查询</a></li></ul><br><p><img src="./1563107420855.png" alt="Alt text"></p><br><h2 id="收集开放端口信息"><a href="#收集开放端口信息" class="headerlink" title="收集开放端口信息"></a>收集开放端口信息</h2><br><blockquote><p>在得到了网站的真实 IP后，就需要进一步的深入调查<br>通过扫描服务器开放的端口以及从该端口判断服务器上存在的服务甚至服务的版本，就可以对症下药 </p></blockquote><p>常用工具：</p><ul><li>Nmap （主要使用）</li><li>censys（虽然不全）</li><li><a href="https://github.com/zmap/zmap" target="_blank" rel="noopener">zmap</a> 偏向于扫描指定范围内主机的某个指定端口是否开放</li><li>Masscan 可用作 Nmap的替代品</li></ul><br><p><code>nmap -sS xxx.com -p 21,22,23,3389</code><br><code>nmap -sS xxx.com -F</code><br><code>nmap -sS xxx.com</code><br><code>...</code><br><img src="./%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190711175149.png" alt="Alt text"></p><br><h2 id="服务器系统"><a href="#服务器系统" class="headerlink" title="服务器系统"></a>服务器系统</h2><br><ul><li>网址大小写是否敏感判断 Windows/Linux，Linux大小写敏感</li><li><code>nmap -sS xxx.com -O</code> </li><li><a href="https://fofa.so" target="_blank" rel="noopener">FOFA</a> 网络空间安全引擎</li></ul><br><p><img src="./1563012218157.png" alt="Alt text"></p><br><h2 id="CMS指纹扫描-amp-WAF-TODO"><a href="#CMS指纹扫描-amp-WAF-TODO" class="headerlink" title="CMS指纹扫描&amp;WAF [TODO]"></a>CMS指纹扫描&amp;WAF [TODO]</h2><br>这里的指纹是指网站 CMS指纹识别、计算机操作系统及 Web容器的指纹等<p>工具：</p><ul><li>header头信息</li><li><a href="https://www.wappalyzer.com/download" target="_blank" rel="noopener">Wappalyzer</a> 浏览器插件，能够分析目标网站所采用的平台构架、网站环境、服务器配置环境、JavaScript框架、编程语言等参数</li><li><a href="http://www.yunsee.cn/finger.html" target="_blank" rel="noopener">云悉</a>  云悉在线WEB指纹CMS识别平台 </li><li><a href="http://whatweb.bugscaner.com/look/" target="_blank" rel="noopener">在线cms指纹识别</a> </li><li><a href="https://www.whatweb.net/" target="_blank" rel="noopener">whatweb在线</a></li><li><a href="https://github.com/Ekultek/WhatWaf" target="_blank" rel="noopener">WhatWaf</a>  检测和绕过 web应用程序防火墙和保护系统</li><li><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">WAFW00F</a>  识别 Web应用防火墙(WAF)产品的指纹</li><li>WhatWeb（kali） 可识别web技术，包括内容管理系统(CMS)、博客平台、统计/分析包、JavaScript库，Web服务器和嵌入式设备等</li></ul><br><p><img src="./1563008343320.png" alt="Alt text"></p><p><img src="./1563012336441.png" alt="Alt text"></p><p><img src="./1563116332512.png" alt="Alt text"></p><p><img src="./1563117642220.png" alt="Alt text"></p><p><img src="./1563150655612.png" alt="Alt text"></p><br><h2 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h2><br><p>使用工具：</p><ul><li><a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">DirSearch</a> 和 <a href="https://github.com/evilH2O2/Daily/blob/master/Tools/dics_cn.zip" target="_blank" rel="noopener">字典</a> [居家必备]</li><li>dir_scanner（MSF： <code>msf5 &gt; use auxiliary/scanner/http/dir_scanner</code>）目录扫描</li><li>robots_txt （MSF： <code>msf5 &gt; use auxiliary/scanner/http/robots_txt</code>） robots扫描</li><li><a href="https://github.com/evilH2O2/Daily/blob/master/Tools/%E5%BE%A1%E5%89%91%E5%90%8E%E5%8F%B0%E6%89%AB%E6%8F%8F%E7%8F%8D%E8%97%8F%E7%89%88.rar" target="_blank" rel="noopener">御剑后台扫描珍藏版</a></li><li>DirBuster 是 OWASP开发的一款基于 JAVA编写的、专门用来探测 Web服务器的目录和隐藏文件</li></ul><p><img src="./2019-07-13.png" alt="Alt text"></p><br><hr><h2 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h2><br>在了解了大多数信息后，就可以更近一步的 进行漏洞扫描<br><h3 id="漏洞扫描-1"><a href="#漏洞扫描-1" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h3><br><p>漏洞扫描工具：</p><ul><li>Rapi7 Nexpose</li><li><a href="https://zh-cn.tenable.com/downloads/nessus" target="_blank" rel="noopener">Nessus</a>（强烈推荐）MSF创建新任务报错<code>nessus.rb:979:in cmd_nessus_scan_new</code>解决：<a href="https://github.com/rapid7/metasploit-framework/issues/11117" target="_blank" rel="noopener">#11117</a> 若是持续出现 API Disabled，刷新无效，可在改回来</li><li>OpenVAS（开源工具）</li></ul><br><p><img src="./1.png" alt="Alt text"><br><img src="./1563071999609.png" alt="Alt text"><br><img src="./2019-07-14%2010-41-47%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="Alt text"></p><br><h3 id="网站应用程序扫描"><a href="#网站应用程序扫描" class="headerlink" title="网站应用程序扫描"></a>网站应用程序扫描</h3><br>在知道了目标的大体网络架构和运行的服务情况，并对网络进行的漏洞扫描后，就可以进行网站应用程序扫描<p>常用扫描工具：</p><ul><li>sqlmap </li><li><a href="https://portswigger.net/burp" target="_blank" rel="noopener">BurpSuite</a> </li><li>ZAP（kali）</li><li>WebScarab （kali）</li></ul><hr><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul><li>《黑客秘籍——渗透测试实用指南 第2版》</li><li>《Metasploit渗透测试魔鬼训练营》 </li><li>《Web安全攻防 渗透测试实战指南》</li><li><a href="http://www.doubleyi.xin/2018/01/01/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/web%E5%AE%89%E5%85%A8%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/" target="_blank" rel="noopener">web安全信息搜集 </a> </li><li><a href="https://masterxsec.github.io/2017/05/29/Web%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">Web渗透测试-信息收集总结 </a> </li><li><a href="http://waldo.com.cn/2018/08/09/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8B%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/" target="_blank" rel="noopener">渗透测试之信息收集</a></li><li><a href="http://www.northity.com/2018/10/21/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%950x00-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/" target="_blank" rel="noopener">渗透测试0x00 信息收集</a> </li><li><a href="https://gorgias.me/2017/12/05/%E5%AD%90%E5%9F%9F%E5%90%8D%E6%94%B6%E9%9B%86%E7%AC%94%E8%AE%B0/" target="_blank" rel="noopener">子域名收集笔记</a> </li><li><a href="https://www.je2se.com/archives/192" target="_blank" rel="noopener">绕过CDN，查找网站的真实IP</a> </li><li><a href="https://www.secjuice.com/finding-real-ips-of-origin-servers-behind-cloudflare-or-tor/" target="_blank" rel="noopener">Finding The Real Origin IPs Hiding Behind CloudFlare or Tor</a> </li><li><a href="http://www.hackliu.com/?p=448" target="_blank" rel="noopener">绕过CDN查找真实IP方法</a> </li><li><a href="https://soapffz.com/sec/186.html#menu_index_8" target="_blank" rel="noopener">信息收集 - 端口扫描及服务识别</a>  </li><li><a href="https://blog.zeddyu.info/2019/06/12/Scanner/" target="_blank" rel="noopener">浅谈端口扫描技术 </a> </li><li><a href="https://dfkan.com/1469.html" target="_blank" rel="noopener">DF-PUSH(May.17)——抛弃过时的御剑：DirSearch引领web路径爆破新时代！ </a>  </li><li><a href="https://juejin.im/post/5cb590b251882532e462ecfc" target="_blank" rel="noopener">Metasploit 渗透测试手册第三版 第二章 信息收集与扫描</a> </li><li><a href="https://hellohxk.com/blog/penetration-testing/" target="_blank" rel="noopener">渗透测试相关总结</a> </li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Security </tag>
            
            <tag> Web Security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADB常用命令</title>
      <link href="/2019/06/22/ADB%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/06/22/ADB%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>摘下红花送伊人<br>红花似火绾青丝<br>红花啊红花，绾起伊人的青丝<br>伊人笑靥如花</p><p>摘下白花送伊人<br>白花如雪别心口<br>白花啊白花，别在伊人的心口<br>伊人皎洁如月<br>伊人皎洁如月</p><footer><strong>美绪</strong><cite><a href="https://www.bilibili.com/bangumi/play/ep259703" target="_blank" rel="noopener">Bilibili《多罗罗》</a></cite></footer></blockquote><a id="more"></a><hr><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1353269777&auto=1&height=66"></iframe><p><img src="73547799_p0.jpg" alt="73547799_p0.jpg"></p><!--  --><br><h2 id="基本与应用"><a href="#基本与应用" class="headerlink" title="基本与应用"></a>基本与应用</h2><hr><h3 id="查看设备"><a href="#查看设备" class="headerlink" title="查看设备"></a>查看设备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices </span><br><span class="line"><span class="comment"># List of devices attached</span></span><br><span class="line"><span class="comment"># cf264b8fdevice</span></span><br></pre></td></tr></table></figure><h3 id="进入shell"><a href="#进入shell" class="headerlink" title="进入shell"></a>进入shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell</span><br><span class="line"><span class="comment"># OnePlus3T:/ $ ll</span></span><br></pre></td></tr></table></figure><h3 id="以-root-权限运行-手机需要-root"><a href="#以-root-权限运行-手机需要-root" class="headerlink" title="以 root 权限运行(手机需要 root)"></a>以 root 权限运行(手机需要 root)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">adb root</span><br><span class="line"><span class="comment"># restarting adbd as root</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># adbd cannot run as root in production builds</span></span><br></pre></td></tr></table></figure><h3 id="无线连接（需要借助-USB-线）"><a href="#无线连接（需要借助-USB-线）" class="headerlink" title="无线连接（需要借助 USB 线）"></a>无线连接（需要借助 USB 线）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找到 IP地址(ifconfig/ip addr/ip link)</span></span><br><span class="line">OnePlus3T:/ $ ifconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 让设备在 任意 端口监听 TCP/IP 连接</span></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb tcpip 8848</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 断开连接</span></span><br><span class="line"><span class="comment"># 通过 IP 地址连接设备</span></span><br><span class="line">adb connect &lt;device-ip-address[:port]&gt;</span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb connect 192.168.1.3:8848</span></span><br><span class="line"><span class="comment"># connected to 192.168.1.3:8848</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看设备是否出现</span></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb devices</span></span><br><span class="line"><span class="comment"># List of devices attached</span></span><br><span class="line"><span class="comment"># 192.168.1.3:8848unauthorized</span></span><br></pre></td></tr></table></figure><h3 id="断开无线连接"><a href="#断开无线连接" class="headerlink" title="断开无线连接"></a>断开无线连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb disconnect &lt;device-ip-address&gt;</span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb disconnect 192.168.1.3:8848</span></span><br></pre></td></tr></table></figure><h3 id="查看应用列表"><a href="#查看应用列表" class="headerlink" title="查看应用列表"></a>查看应用列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adb shell pm list packages [-f] [-d] [-e] [-s] [-3] [-i] [-u] [--user USER_ID] [FILTER]</span></span><br><span class="line"><span class="comment"># -s 只显示系统应用</span></span><br><span class="line"><span class="comment"># -3 只显示第三方应用</span></span><br><span class="line"><span class="comment"># &lt;FILTER&gt; 包名包含 &lt;FILTER&gt; 字符串</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell pm list packages -3</span></span><br><span class="line"><span class="comment"># package:com.github.shadowsocks</span></span><br><span class="line"><span class="comment"># package:com.chenupt.day</span></span><br><span class="line"><span class="comment"># package:org.telegram.messenger</span></span><br><span class="line"><span class="comment"># package:com.niksoftware.snapseed</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell pm list packages -s</span></span><br><span class="line"><span class="comment"># package:com.oneplus.calculator</span></span><br><span class="line"><span class="comment"># package:net.oneplus.weather</span></span><br><span class="line"><span class="comment"># package:com.android.cts.priv.ctsshim</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell pm list packages bili</span></span><br><span class="line"><span class="comment"># package:com.hypergryph.arknights.bilibili</span></span><br><span class="line"><span class="comment"># package:com.bilibili.comic</span></span><br><span class="line"><span class="comment"># package:com.digitalsky.girlsfrontline.cn.bili</span></span><br><span class="line"><span class="comment"># package:tv.danmaku.bili</span></span><br></pre></td></tr></table></figure><h3 id="安装-卸载-APK"><a href="#安装-卸载-APK" class="headerlink" title="安装/卸载 APK"></a>安装/卸载 APK</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adb install [-lrtsdg] &lt;path_to_apk&gt;</span></span><br><span class="line"><span class="comment"># -l 将应用安装到保护目录 /mnt/asec</span></span><br><span class="line"><span class="comment"># -r 允许覆盖安装</span></span><br><span class="line"><span class="comment"># -t 允许安装 AndroidManifest.xml 里 application 指定 android:testOnly="true" 的应用</span></span><br><span class="line"><span class="comment"># -s 将应用安装到 sdcard</span></span><br><span class="line"><span class="comment"># -d 允许降级覆盖安装</span></span><br><span class="line"><span class="comment"># -g 授予所有运行时权限</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 详细 : &lt;https://github.com/mzlogin/awesome-adb#%E5%AE%89%E8%A3%85-apk&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adb uninstall [-k] &lt;packagename&gt;</span></span><br><span class="line"><span class="comment"># &lt;packagename&gt; 表示应用的包名，-k 参数可选，表示卸载应用但保留数据和缓存目录</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb uninstall com.bilibili.comic</span></span><br></pre></td></tr></table></figure><h3 id="清除应用数据与缓存"><a href="#清除应用数据与缓存" class="headerlink" title="清除应用数据与缓存"></a>清除应用数据与缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adb shell dumpsys package &lt;packagename&gt;</span></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell pm clear com.bilibili.comic</span></span><br></pre></td></tr></table></figure><h3 id="查看应用详细信息"><a href="#查看应用详细信息" class="headerlink" title="查看应用详细信息"></a>查看应用详细信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell dumpsys package com.bilibili.comic</span></span><br></pre></td></tr></table></figure><h3 id="查看应用安装路径"><a href="#查看应用安装路径" class="headerlink" title="查看应用安装路径"></a>查看应用安装路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adb shell pm path &lt;PACKAGE&gt;</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell pm path com.bilibili.comic </span></span><br><span class="line"><span class="comment"># package:/data/app/com.bilibili.comic-VefU-I3Sq3yFa7hzXBuAXg==/base.apk</span></span><br></pre></td></tr></table></figure><h3 id="强制停止应用"><a href="#强制停止应用" class="headerlink" title="强制停止应用"></a>强制停止应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adb shell am force-stop &lt;packagename&gt;</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell am force-stop com.taobao.taoba</span></span><br></pre></td></tr></table></figure><h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><hr><h3 id="复制设备里的文件到电脑"><a href="#复制设备里的文件到电脑" class="headerlink" title="复制设备里的文件到电脑"></a>复制设备里的文件到电脑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adb pull &lt;设备里的文件路径&gt; [电脑上的目录]</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb pull /sdcard/Pictures ~/Pictures</span></span><br></pre></td></tr></table></figure><h3 id="复制电脑里的文件到设备"><a href="#复制电脑里的文件到设备" class="headerlink" title="复制电脑里的文件到设备"></a>复制电脑里的文件到设备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adb push &lt;电脑上的文件路径&gt; &lt;设备里的目录&gt;</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb push ~/Documents/Python/hello.py /sdcard/Python</span></span><br></pre></td></tr></table></figure><h2 id="模拟按键-输入"><a href="#模拟按键-输入" class="headerlink" title="模拟按键/输入"></a>模拟按键/输入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># input [&lt;source&gt;] &lt;command&gt; [&lt;arg&gt;...]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># adb shell input keyevent &lt;keycode&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 亮屏</span></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell input keyevent 224</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 详细: &lt;https://github.com/mzlogin/awesome-adb#%E6%A8%A1%E6%8B%9F%E6%8C%89%E9%94%AE%E8%BE%93%E5%85%A5&gt;</span></span><br></pre></td></tr></table></figure><h2 id="实用功能"><a href="#实用功能" class="headerlink" title="实用功能"></a>实用功能</h2><h3 id="截图保存到电脑"><a href="#截图保存到电脑" class="headerlink" title="截图保存到电脑"></a>截图保存到电脑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@arch ~ -&gt;<span class="comment"># adb exec-out screencap -p &gt; sc.png</span></span><br></pre></td></tr></table></figure><h3 id="录制屏幕"><a href="#录制屏幕" class="headerlink" title="录制屏幕"></a>录制屏幕</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 录制屏幕以 mp4 格式保存到 /sdcard</span></span><br><span class="line">adb shell screenrecord /sdcard/filename.mp4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按 Ctrl-C 停止</span></span><br><span class="line"><span class="comment"># 默认录制时间和最长录制时间都是 180 秒</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --size WIDTHxHEIGHT 视频的尺寸，比如 1280x720，默认是屏幕分辨率。</span></span><br><span class="line"><span class="comment"># --bit-rate RATE 视频的比特率，默认是 4Mbps。</span></span><br><span class="line"><span class="comment"># --time-limit TIME 录制时长，单位秒。</span></span><br><span class="line"><span class="comment"># --verbose 输出更多信息。</span></span><br></pre></td></tr></table></figure><h3 id="Top-amp-amp-ps"><a href="#Top-amp-amp-ps" class="headerlink" title="Top &amp;&amp; ps"></a>Top &amp;&amp; ps</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell top</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell ps</span></span><br></pre></td></tr></table></figure><h3 id="查看进程-UID"><a href="#查看进程-UID" class="headerlink" title="查看进程 UID"></a>查看进程 UID</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adb shell dumpsys package &lt;packagename&gt; | grep userId=</span></span><br><span class="line"></span><br><span class="line">root@arch ~ -&gt;<span class="comment"># adb shell dumpsys package com.bilibili.comic | grep userId=</span></span><br><span class="line">    <span class="comment"># userId=10203</span></span><br></pre></td></tr></table></figure><blockquote><p>基本的 linux命令（ls/cat/df/rm/…）</p></blockquote><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul><li><a href="https://github.com/mzlogin/awesome-adb#%E6%A8%A1%E6%8B%9F%E6%8C%89%E9%94%AE%E8%BE%93%E5%85%A5" target="_blank" rel="noopener">ADB Usage Complete / ADB 用法大全</a> </li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog Reference Link</title>
      <link href="/2019/06/14/Blog-Reference-Link/"/>
      <url>/2019/06/14/Blog-Reference-Link/</url>
      
        <content type="html"><![CDATA[<blockquote><p>恩 有点特别的信<br>但是<br>但这是……<br>世界上最纯粹最美丽的思念</p><footer><strong>文伽</strong><cite><a href="https://www.bilibili.com/bangumi/play/ep102379" target="_blank" rel="noopener">Bilibili《死后文》</a></cite></footer></blockquote><a id="more"></a><hr><!-- ![68527244_p0.jpg](68527244_p0.jpg) --><img src="/2019/06/14/Blog-Reference-Link/68527244_p0.jpg" width="600" height="600" title="68527244_p0.jpg"><br><p>配置 Blog时参考的链接：</p><ul><li><a href="https://blog.csdn.net/u011475210/article/details/79023429" target="_blank" rel="noopener">从jekyll到hexo</a></li><li><a href="https://www.jianshu.com/p/3a05351a37dc" target="_blank" rel="noopener">Hexo的Next主题详细配置</a></li><li><a href="https://www.jianshu.com/p/1f8107a8778c" target="_blank" rel="noopener">hexo搭建个人博客–NexT主题优化</a></li><li><a href="https://blog.csdn.net/u011054333/article/details/82718910" target="_blank" rel="noopener">在Hexo博客上添加可爱的Live2D模型</a></li><li><a href="https://www.jianshu.com/p/baea8c95e39b" target="_blank" rel="noopener">Hexo添加字数统计、阅读时长</a></li><li><a href="https://segmentfault.com/q/1010000017254914" target="_blank" rel="noopener">下载的hexo主题必须删掉.git</a></li><li><a href="https://www.cnblogs.com/php-linux/p/8416116.html" target="_blank" rel="noopener">2个小时教你hexo博客添加评论、打赏…</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__Hexo__Github_font_155" target="_blank" rel="noopener">使用GithubPages和Hexo搭建自己…</a></li><li><a href="https://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/" target="_blank" rel="noopener">将hexo+github博客同步托管至coding</a></li><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT使用文档</a></li><li><a href="https://www.jianshu.com/p/2e318226c88d" target="_blank" rel="noopener">使用Hexo+Next主题搭建自己的个人博客</a></li></ul><br><ul><li><a href="https://iochen.com/2018/01/06/use-gitalk-in-hexo/" target="_blank" rel="noopener">Hexo中Gitalk配置使用教程</a></li><li><a href="https://asdfv1929.github.io/2018/01/20/gitalk/" target="_blank" rel="noopener">Hexo NexT主题中集成gitalk评论系统</a></li><li><a href="https://tyloafer.github.io/posts/7790/" target="_blank" rel="noopener">Hexo中引入Mermaid流程图</a></li><li><a href="https://github.com/webappdevelp/hexo-filter-mermaid-diagrams" target="_blank" rel="noopener">hexo-filter-mermaid-diagrams</a></li></ul><hr><blockquote><p>配置 gitalk评论系统注意</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// gitalk.swig </span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span><br><span class="line">      clientID: <span class="string">'&#123;&#123; theme.gitalk.ClientID &#125;&#125;'</span>,   <span class="comment">// &lt;----</span></span><br><span class="line">      clientSecret: <span class="string">'&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;'</span>, <span class="comment">// &lt;----</span></span><br><span class="line">      repo: <span class="string">'&#123;&#123; theme.gitalk.repo &#125;&#125;'</span>,</span><br><span class="line">      owner: <span class="string">'&#123;&#123; theme.gitalk.githubID &#125;&#125;'</span>,</span><br><span class="line">      admin: [<span class="string">'&#123;&#123; theme.gitalk.adminUser &#125;&#125;'</span>],</span><br><span class="line">      id: location.pathname,</span><br><span class="line">      distractionFreeMode: <span class="string">'&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    gitalk.render(<span class="string">'gitalk-container'</span>)           </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  githubID:</span> <span class="string">evilH2O2</span>  </span><br><span class="line"><span class="attr">  repo:</span> <span class="string">gitalkComments</span>   </span><br><span class="line"><span class="attr">  ClientID:</span> <span class="string">xxxx</span>      <span class="comment"># &lt;---- 与上面对应，网上有版本不一样的 （ client_id )</span></span><br><span class="line"><span class="attr">  ClientSecret:</span> <span class="string">xxx</span>   <span class="comment"># &lt;---- 与上面对应</span></span><br><span class="line"><span class="attr">  owner:</span> <span class="string">evilH2O2</span></span><br><span class="line"><span class="attr">  adminUser:</span> <span class="string">evilH2O2</span> </span><br><span class="line"><span class="attr">  distractionFreeMode:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>用 代码块(3个 `) + mermaid使用 Mermaid流程图</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ``3 mermaid</span></span><br><span class="line"><span class="comment"># graph LR </span></span><br><span class="line"><span class="comment">#   A --&gt; B</span></span><br><span class="line"><span class="comment"># ``3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test Page</title>
      <link href="/2019/06/12/Test-Page/"/>
      <url>/2019/06/12/Test-Page/</url>
      
        <content type="html"><![CDATA[<p>本页面用来进行测试</p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1351291792&auto=1&height=66"></iframe><h2 id="h2"><a href="#h2" class="headerlink" title="h2"></a>h2</h2><h3 id="h3"><a href="#h3" class="headerlink" title="h3"></a>h3</h3><h4 id="h4"><a href="#h4" class="headerlink" title="h4"></a>h4</h4><h5 id="h5"><a href="#h5" class="headerlink" title="h5"></a>h5</h5><hr><p><em>code</em> <code>code</code> <strong>code</strong> <del>code</del> </p><ul><li>list1</li><li>list2</li><li>list3<ul><li>llist1</li><li>llist2</li></ul></li></ul><ol><li>list1</li><li>list2</li><li>list3</li><li>list4</li></ol><figure class="highlight python"><figcaption><span>Test</span><a href="https://404.com" target="_blank" rel="noopener">404.py</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">os.system(<span class="string">"ls -l"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>I jump you jump </p></blockquote><blockquote><p>行千里路，吃万家菜</p><footer><strong>佚名, Internet</strong><cite><a href="https://404.com" target="_blank" rel="noopener">您可就别点击了</a></cite></footer></blockquote><p><a href="https://404.com" target="_blank" rel="noopener">https://404.com</a></p><p><a href="https://404.com" title="404" target="_blank" rel="noopener">404</a></p><p>$C^2$</p><pre class="mermaid">graph LR     subgraph 初始轮         txt[明文块] --> init0[加轮秘钥]     end     subgraph 普通轮 第1轮        pu0[字节代替]         pu1[行移位]         pu2[列混淆]         pu3[加轮秘钥]     end    init0[加轮秘钥] --> pu0[字节代替]     pu3[加轮秘钥] --> lue0[...]     subgraph 普通轮 第9轮        pu20[字节代替]         pu21[行移位]         pu22[列混淆]         pu23[加轮秘钥]     end    lue0[...] --> pu20[字节代替]     subgraph 最终轮        end0[字节代替]        end1[行移位]        end2[加轮秘钥]    end    pu23[加轮秘钥] --> end0[字节代替]    end2[加轮秘钥] --> end3[密文]     subgraph 扩展密钥        expand0[W 0-15]        expand1[W 16-31]        expand2[W 144-159]        expand3[W 160-175]    end    密钥 --- expand0[W 0-15]    expand0[W 0-15] --> init0[加轮秘钥]    expand1[W 16-31] --> pu3[加轮秘钥]    expand2[W 144-159] --> pu23[加轮秘钥]    expand3[W 160-175] --> end2[加轮秘钥]</pre><hr><p><img src="74716414_p0.jpg" alt="error"></p><hr><img src="/2019/06/12/Test-Page/74716414_p0.jpg" width="400" height="600" title="祢豆子 鬼灭">]]></content>
      
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
